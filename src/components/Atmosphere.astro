<section class="relative py-20 bg-white" id="atmosphere">
  <div class="absolute inset-0 z-0 pointer-events-none overflow-hidden">
    <div
      class="absolute top-[-60px] right-[-40px] w-72 h-72 bg-pink-100 opacity-30 rounded-full blur-3xl animate-pulse-slow"
    >
    </div>
    <div
      class="absolute top-1/3 left-[-60px] w-60 h-60 bg-primary-light opacity-20 rounded-full blur-2xl animate-pulse"
    >
    </div>
    <div
      class="absolute bottom-[-50px] left-20 w-36 h-36 bg-accent-light opacity-25 rounded-full blur-3xl animate-pulse-slower"
    >
    </div>
  </div>

  <div class="relative z-10 container mx-auto px-4 lg:px-10">
    <div class="text-center mb-16 opacity-0" data-animate="fadeInUpBig">
      <h2 class="text-4xl md:text-5xl font-bold text-gray-800 mb-4">
        บรรยากาศร้าน
      </h2>
      <p class="text-xl text-gray-600 mb-8">
        ร้านสะอาด กลิ่นหอม มีเพลงเบา ๆ บริการอบอุ่น
      </p>
    </div>

    <!-- Track: mobile = slider (horizontal, snap), md+ = grid -->
    <div
      id="atmoTrack"
      class="flex md:grid md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-8 overflow-x-auto md:overflow-visible snap-x snap-mandatory md:snap-none scroll-smooth"
    >
      <!-- slide 1 -->
      <div
        class="slide overflow-hidden rounded-2xl shadow-lg card-hover opacity-0 flex-none w-[85%] sm:w-[70%] md:w-auto snap-center"
        data-animate="fadeInLeft"
      >
        <img
          src="/images/asmos1.webp"
          alt="บรรยากาศร้าน 1"
          class="w-full h-64 object-cover"
        />
      </div>
      <!-- slide 2 -->
      <div
        class="slide overflow-hidden rounded-2xl shadow-lg card-hover opacity-0 flex-none w-[85%] sm:w-[70%] md:w-auto snap-center"
        data-animate="fadeInRight"
      >
        <img
          src="/images/asmos2.webp"
          alt="บรรยากาศร้าน 2"
          class="w-full h-64 object-cover"
        />
      </div>
      <!-- slide 3 -->
      <div
        class="slide overflow-hidden rounded-2xl shadow-lg card-hover opacity-0 flex-none w-[85%] sm:w-[70%] md:w-auto snap-center"
        data-animate="zoomIn"
      >
        <img
          src="/images/asmos3.webp"
          alt="บรรยากาศร้าน 3"
          class="w-full h-64 object-cover"
        />
      </div>
      <!-- slide 4 -->
      <div
        class="slide overflow-hidden rounded-2xl shadow-lg card-hover opacity-0 flex-none w-[85%] sm:w-[70%] md:w-auto snap-center"
        data-animate="fadeInLeftBig"
      >
        <img
          src="/images/asmos4.webp"
          alt="บรรยากาศร้าน 4"
          class="w-full h-64 object-cover"
        />
      </div>
      <!-- slide 5 -->
      <div
        class="slide overflow-hidden rounded-2xl shadow-lg card-hover opacity-0 flex-none w-[85%] sm:w-[70%] md:w-auto snap-center"
        data-animate="slideInUp"
      >
        <img
          src="/images/asmos5.webp"
          alt="บรรยากาศร้าน 5"
          class="w-full h-64 object-cover"
        />
      </div>
      <!-- slide 6 -->
      <div
        class="slide overflow-hidden rounded-2xl shadow-lg card-hover opacity-0 flex-none w-[85%] sm:w-[70%] md:w-auto snap-center"
        data-animate="fadeInUp"
      >
        <img
          src="/images/asmos6.webp"
          alt="บรรยากาศร้าน 6"
          class="w-full h-64 object-cover"
        />
      </div>
    </div>

    <!-- Mobile controls (ซ่อนบน md+) -->
    <div class="md:hidden mt-6 flex items-center justify-center gap-3">
      <button
        id="atmoPrev"
        type="button"
        class="px-3 py-2 rounded-full border border-gray-300 text-gray-700 active:scale-95"
        aria-label="ก่อนหน้า"
      >
        ‹
      </button>

      <div id="atmoDots" class="flex items-center gap-2"></div>

      <button
        id="atmoNext"
        type="button"
        class="px-3 py-2 rounded-full border border-gray-300 text-gray-700 active:scale-95"
        aria-label="ถัดไป"
      >
        ›
      </button>
    </div>
  </div>
</section>

<script>
  // @ts-check
  (() => {
    /** @type {HTMLDivElement|null} */
    const trackEl = document.getElementById("atmoTrack");
    /** @type {HTMLButtonElement|null} */
    const prevBtn = document.getElementById("atmoPrev");
    /** @type {HTMLButtonElement|null} */
    const nextBtn = document.getElementById("atmoNext");
    /** @type {HTMLDivElement|null} */
    const dotsWrap = document.getElementById("atmoDots");

    if (!(trackEl instanceof HTMLDivElement)) return;
    /** @type {HTMLDivElement} */
    const track = trackEl;

    /** @type {HTMLElement[]} */
    const slides = Array.from(
      /** @type {NodeListOf<HTMLElement>} */ (track.querySelectorAll(".slide"))
    );

    if (!slides.length) return;

    /** @type {"smooth"|"auto"} */
    const smooth = window.matchMedia("(prefers-reduced-motion: reduce)").matches
      ? "auto"
      : "smooth";

    function renderDots() {
      if (!(dotsWrap instanceof HTMLDivElement)) return;
      dotsWrap.innerHTML = "";
      slides.forEach(
        (/** @type {HTMLElement} */ _s, /** @type {number} */ i) => {
          const b = document.createElement("button");
          b.type = "button";
          b.className =
            "w-2.5 h-2.5 rounded-full bg-gray-300 transition-all duration-200";
          b.setAttribute("aria-label", "ไปสไลด์ที่ " + (i + 1));
          b.addEventListener("click", () => goTo(i));
          dotsWrap.appendChild(b);
        }
      );
    }

    function getNearestIndex() {
      const left = track.scrollLeft;
      const w = track.clientWidth;
      let nearest = 0;
      let minDist = Infinity;
      slides.forEach(
        (/** @type {HTMLElement} */ el, /** @type {number} */ i) => {
          const centerDist = Math.abs(
            el.offsetLeft - left - (w - el.clientWidth) / 2
          );
          if (centerDist < minDist) {
            minDist = centerDist;
            nearest = i;
          }
        }
      );
      return nearest;
    }

    /** เลื่อนไป index ที่กำหนด
     * @param {number} index
     */
    function goTo(index) {
      const i = Math.max(0, Math.min(slides.length - 1, index));
      const el = slides[i];
      const targetLeft =
        el.offsetLeft - (track.clientWidth - el.clientWidth) / 2;
      track.scrollTo({ left: targetLeft, behavior: smooth });
      updateDots(i);
    }

    /** อัปเดตจุดสถานะ
     * @param {number} [activeIdx]
     */
    function updateDots(activeIdx) {
      if (!(dotsWrap instanceof HTMLDivElement)) return;
      const act = typeof activeIdx === "number" ? activeIdx : getNearestIndex();
      const dots = Array.from(dotsWrap.children);
      dots.forEach((/** @type {HTMLElement} */ d, /** @type {number} */ i) => {
        d.className =
          "w-2.5 h-2.5 rounded-full transition-all duration-200 " +
          (i === act ? "bg-primary scale-125" : "bg-gray-300");
      });
    }

    // ปุ่มเลื่อน
    prevBtn?.addEventListener("click", () => goTo(getNearestIndex() - 1));
    nextBtn?.addEventListener("click", () => goTo(getNearestIndex() + 1));

    // อัปเดต dot ระหว่างเลื่อน/รีไซส์
    track.addEventListener(
      "scroll",
      () => requestAnimationFrame(() => updateDots()),
      { passive: true }
    );
    window.addEventListener("resize", () => updateDots());

    // เริ่มต้น
    renderDots();
    updateDots(0);
  })();
</script>
