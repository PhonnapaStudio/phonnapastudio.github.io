---
/**
 * ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô ‚Äî ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏≠‡∏≤‡∏ï‡πå‡πÄ‡∏î‡∏¥‡∏°
 * ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ SHEET_CSV_URL ‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏á‡∏Å‡πå Google Sheets -> Publish to the web -> CSV
 * ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ LINE_OA_ID ‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏≠‡∏î‡∏µ OA ‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô (‡πÄ‡∏ä‡πà‡∏ô @phonnapastudio)
 */
const SHEET_CSV_URL =
  "https://docs.google.com/spreadsheets/d/e/2PACX-1vT6xkgqP_QRVKYf5OhLuLI7eIxCADsnDoX5keC-vAat_YmeAF7_fH6nwOAvW6vASS-tq7ysV5ZnqwYn/pub?gid=0&single=true&output=csv"; // <- ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á
const LINE_OA_ID = "@your-line-id"; // <- üîß ‡πÅ‡∏Å‡πâ‡πÄ‡∏õ‡πá‡∏ô OA ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const base = import.meta.env.BASE_URL || "/";
---

<!doctype html>
<html lang="th">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏¥‡∏ß‡∏ß‡πà‡∏≤‡∏á | Phonnapa Studio</title>
    <meta
      name="description"
      content="‡∏î‡∏π‡∏Ñ‡∏¥‡∏ß‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö Phonnapa Studio ‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏à‡∏≤‡∏Å Google Sheets"
    />
    <link rel="icon" type="image/png" href="/images/logo.webp" />

    <!-- ‡∏ü‡∏≠‡∏ô‡∏ï‡πå + ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Sarabun:wght@300;400;600;700&display=swap"
      rel="stylesheet"
    />

    <style>
      :root {
        --color-primary: #f78cbc;
        --color-accent: #ffadc3;
        --bg: #fff9fb;
        --bg-soft: #f5f0fa;

        /* ‡∏™‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ */
        --avail-border: #22c55e;
        --avail-bg: rgba(34, 197, 94, 0.22);
        --booked-border: #9ca3af;
        --booked-bg: rgba(0, 0, 0, 0.05);
      }

      * {
        box-sizing: border-box;
      }
      body {
        margin: 0;
        font-family:
          "Sarabun",
          system-ui,
          -apple-system,
          Segoe UI,
          Roboto,
          sans-serif;
        background: linear-gradient(135deg, var(--bg) 0%, var(--bg-soft) 100%);
        min-height: 100vh;
      }

      /* ---------- BG: GIF + Still ---------- */
      .bg-layer {
        position: fixed;
        inset: 0;
        z-index: -1;
        pointer-events: none;
      }
      .bg-layer img {
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        filter: saturate(0.9) brightness(0.95);
      }
      .bg-layer .still {
        display: none;
      }
      @media (prefers-reduced-motion: reduce) {
        .bg-layer .motion {
          display: none;
        }
        .bg-layer .still {
          display: block;
        }
      }
      .bg-layer::after {
        content: "";
        position: absolute;
        inset: 0;
        background: radial-gradient(
          120% 100% at 50% 0%,
          rgba(10, 10, 25, 0) 0%,
          rgba(10, 10, 25, 0.45) 55%,
          rgba(10, 10, 25, 0.65) 100%
        );
      }

      .container {
        max-width: 1100px;
        margin: 0 auto;
        padding: 24px;
      }
      @media (max-width: 640px) {
        .container {
          padding: 16px;
        }
      }

      /* --------- Glassmorphism ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏õ‡∏è‡∏¥‡∏ó‡∏¥‡∏ô --------- */
      .card {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.35);
        border-radius: 18px;
        padding: 16px;
        box-shadow: 0 10px 40px rgba(247, 140, 188, 0.18);
        -webkit-backdrop-filter: saturate(1.2) blur(14px);
        backdrop-filter: blur(2px) saturate(1.2);
      }
      @supports not (backdrop-filter: blur(1px)) {
        .card {
          background: rgba(255, 255, 255, 0.92);
        }
      }

      .btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.6rem 1rem;
        border-radius: 999px;
        border: 1px solid var(--color-primary);
        color: #fff;
        background: var(--color-primary);
        text-decoration: none;
      }
      .btn-outline {
        background: rgba(255, 255, 255, 0.9);
        color: var(--color-primary);
        backdrop-filter: blur(4px);
      }

      .legend {
        display: flex;
        gap: 16px;
        align-items: center;
        font-size: 14px;
        margin: 12px 0 16px;
      }
      .dot {
        width: 10px;
        height: 10px;
        border-radius: 999px;
        display: inline-block;
      }
      .topbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 16px;
      }
      .title {
        font-weight: 700;
        font-size: clamp(1.3rem, 1.6vw + 1rem, 2rem);
        color: #fff;
      }
      .foot {
        text-align: center;
        color: #777;
        font-size: 13px;
        margin-top: 18px;
      }

      /* ---------- Calendar box ---------- */
      #calendar {
        background: rgba(255, 255, 255, 0.3);
        border: 1px solid rgba(255, 255, 255, 0.45);
        border-radius: 14px;
        padding: 8px;
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
      }
      @supports not (backdrop-filter: blur(1px)) {
        #calendar {
          background: rgba(255, 255, 255, 0.92);
        }
      }

      /* ---------- FullCalendar Theme ---------- */
      .fc {
        --fc-border-color: #f1e5ef;
        --fc-button-bg-color: var(--color-primary);
        --fc-button-border-color: var(--color-primary);
        --fc-today-bg-color: rgba(255, 241, 246, 0.75);
        --fc-page-bg-color: transparent;
        --fc-neutral-bg-color: rgba(255, 255, 255, 0.35);
        --fc-event-bg-color: rgba(255, 255, 255, 0.82);
        --fc-event-text-color: #111;
        --fc-event-border-color: rgba(0, 0, 0, 0.08);
      }
      .fc .fc-toolbar-title {
        font-weight: 700;
      }
      .fc .fc-button {
        border-radius: 999px;
        padding: 0.5rem 0.9rem;
        font-weight: 600;
      }
      .fc-theme-standard td,
      .fc-theme-standard th {
        border-color: rgba(255, 255, 255, 0.6);
      }
      .fc .fc-daygrid-day-number {
        background: rgba(255, 255, 255, 0.55);
        color: #111;
        padding: 2px 6px;
        border-radius: 8px;
      }

      /* ---------- EVENT styles ---------- */
      .fc .fc-daygrid-event,
      .fc .fc-timegrid-event,
      .fc .fc-list-event {
        border-radius: 10px;
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.06);
      }
      .fc .evt-available {
        border-left: 4px solid var(--avail-border) !important;
      }
      .fc .evt-available .fc-event-main {
        background: var(--avail-bg) !important;
      }
      .fc .evt-booked {
        border-left: 4px solid var(--booked-border) !important;
      }
      .fc .evt-booked .fc-event-main {
        background: var(--booked-bg) !important;
      }

      /* list view spacing */
      .fc .fc-list-table td,
      .fc .fc-list-table th {
        padding: 10px 12px;
      }
      .fc .fc-list-event-time {
        font-weight: 700;
      }
      .fc .fc-list-event-title {
        opacity: 0.9;
      }

      .fc .evt-available,
      .fc .evt-booked {
        cursor: pointer;
      }

      /* ====== MODAL ====== */
      .modal-backdrop {
        position: fixed;
        inset: 0;
        z-index: 40;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 16px;
        background: rgba(15, 15, 30, 0.55);
        backdrop-filter: blur(6px);
      }
      .modal-backdrop[hidden] {
        display: none;
      }
      .modal {
        width: min(560px, 96vw);
        background: rgba(255, 255, 255, 0.86);
        border: 1px solid rgba(255, 255, 255, 0.6);
        border-radius: 16px;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(10px) saturate(1.1);
        -webkit-backdrop-filter: blur(10px) saturate(1.1);
        padding: 18px 18px 14px;
        color: #111;
        position: relative;
      }
      .modal-title {
        margin: 0 0 10px 0;
        font-weight: 700;
        font-size: 20px;
      }
      .modal-close {
        position: absolute;
        right: 10px;
        top: 10px;
        border: 0;
        background: transparent;
        cursor: pointer;
        font-size: 20px;
        line-height: 1;
        padding: 6px;
        border-radius: 8px;
      }
      .modal-close:hover {
        background: rgba(0, 0, 0, 0.06);
      }
      .modal-content {
        display: grid;
        gap: 10px;
      }
      .modal-row {
        display: grid;
        grid-template-columns: 96px 1fr;
        gap: 10px;
        align-items: start;
      }
      .modal-row .label {
        color: #555;
        font-size: 14px;
      }
      .modal-row .value {
        color: #111;
        font-size: 15px;
      }
      #evStatus.badge {
        display: inline-flex !important;
        align-items: center;
        max-width: max-content;
        padding: 2px 10px;
        border-radius: 999px;
      }
      .badge {
        display: inline-block;
        padding: 2px 8px;
        border-radius: 999px;
        font-size: 13px;
        border: 1px solid transparent;
        background: rgba(255, 255, 255, 0.8);
      }
      .badge-available {
        background: #eaffef;
        color: #14532d;
        border-color: #86efac;
      }
      .badge-booked {
        background: #f4f4f5;
        color: #111827;
        border-color: #e5e7eb;
      }

      /* ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏±‡∏• */
      .modal-actions {
        display: flex;
        gap: 10px;
        margin-top: 6px;
      }
      .btn-line {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        text-decoration: none;
        background: #06c755;
        color: #fff;
        border: 1px solid #06c755;
        border-radius: 12px;
        padding: 8px 12px;
        font-weight: 700;
      }

      /* ====== Floating Controls ====== */

      /* CTA ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß ‚Äî ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏•‡πà‡∏≤‡∏á */
      .cta-book {
        position: fixed;
        left: 12px;
        right: 12px;
        bottom: 12px;
        z-index: 6;
        display: flex;
        justify-content: center;
        align-items: center;
        background: var(--color-primary);
        color: #fff;
        text-decoration: none;
        padding: 12px 16px;
        border-radius: 14px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        font-weight: 700;
        letter-spacing: 0.2px;
      }

      /* ‡πÄ‡∏î‡∏™‡∏Å‡πå‡∏ó‡πá‡∏≠‡∏õ: ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≠‡∏á‡∏•‡∏≠‡∏¢‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á ‡πÅ‡∏•‡∏∞‡∏¢‡πâ‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏õ‡∏ã‡πâ‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏±‡∏ö‡∏Å‡∏±‡∏ô */
      @media (min-width: 641px) {
        .cta-book {
          left: auto;
          right: 16px;
          bottom: 16px;
          width: auto;
          padding: 12px 16px;
        }
      }

      /* Lofi mini-player */
      .lofi-control {
        position: fixed;
        z-index: 5;
        display: flex;
        align-items: center;
        gap: 10px;
        padding: 10px 12px;
        border-radius: 14px;
        border: 1px solid var(--color-accent);
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(12px);
        box-shadow: 0 10px 30px rgba(247, 140, 188, 0.18);
      }
      .lofi-btn {
        all: unset;
        cursor: pointer;
        border: 1px solid var(--color-primary);
        background: var(--color-primary);
        color: #fff;
        padding: 6px 10px;
        border-radius: 999px;
        font-size: 13px;
      }
      .lofi-btn.secondary {
        background: transparent;
        color: var(--color-primary);
      }
      .lofi-slider {
        width: 110px;
      }

      /* ‡∏ß‡∏≤‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ä‡∏ô CTA */
      /* ‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏ö‡∏ô */
      @media (max-width: 640px) {
        .lofi-control {
          right: 12px;
          top: 12px;
          bottom: auto;
          left: auto;
        }
      }
      /* ‡πÄ‡∏î‡∏™‡∏Å‡πå‡∏ó‡πá‡∏≠‡∏õ: ‡∏°‡∏∏‡∏°‡∏ã‡πâ‡∏≤‡∏¢‡∏•‡πà‡∏≤‡∏á */
      @media (min-width: 641px) {
        .lofi-control {
          left: 16px;
          bottom: 16px;
          right: auto;
          top: auto;
        }
      }

      @media (max-width: 480px) {
        .lofi-control {
          gap: 8px;
          padding: 8px 10px;
        }
        .lofi-slider {
          width: 90px;
        }
      }

      /* bottom sheet ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ */
      @media (max-width: 640px) {
        .modal-backdrop {
          align-items: flex-end;
        }
        .modal {
          width: 100%;
          max-width: none;
          border-radius: 16px 16px 0 0;
          max-height: 80vh;
          overflow: auto;
          animation: slideUp 0.18s ease-out;
        }
        @keyframes slideUp {
          from {
            transform: translateY(12px);
            opacity: 0;
          }
          to {
            transform: translateY(0);
            opacity: 1;
          }
        }
        .legend {
          gap: 10px;
          font-size: 13px;
        }
        .title {
          font-size: clamp(1.1rem, 1.1rem + 1.2vw, 1.6rem);
        }
        .modal {
          padding: 16px 14px 12px;
        }
        .modal-title {
          font-size: 18px;
        }
        .modal-row {
          grid-template-columns: 84px 1fr;
          gap: 8px;
        }
        .modal-row .label {
          font-size: 13px;
        }
        .modal-row .value {
          font-size: 14px;
        }
      }
    </style>
  </head>

  <body>
    <!-- BG: GIF + Still -->
    <div class="bg-layer" aria-hidden="true">
      <picture class="motion">
        <source
          media="(max-width: 640px)"
          srcset="/images/lofi-bg-mobile.gif"
        />
        <img src="/images/lofi-bg-desktop.gif" alt="" decoding="async" />
      </picture>
      <img
        class="still"
        src="/images/lofi-bg-still.jpg"
        alt=""
        decoding="async"
      />
    </div>

    <div class="container">
      <div class="topbar">
        <a class="btn btn-outline" href={base} aria-label="‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å"
          >‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å</a
        >
        <span class="btn btn-outline">Phonnapa Studio</span>
      </div>

      <div class="card glass">
        <div
          style="display:flex; justify-content:space-between; align-items:end; gap:12px; flex-wrap:wrap;"
        >
          <h1 class="title">‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ß‡πà‡∏≤‡∏á</h1>
          <div class="legend" aria-label="‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞">
            <span
              ><span class="dot" style="background:var(--avail-border);"></span>
              <span style="color: white;">‡∏ß‡πà‡∏≤‡∏á</span></span
            >
            <span style="opacity:.7;"
              ><span class="dot" style="background:#9ca3af;"></span>
              <span style="color: white;">‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß</span></span
            >
          </div>
        </div>

        <div id="calendar" data-sheet-url={SHEET_CSV_URL}></div>

        <p class="foot" style="color: white;">
          ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á? ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤ ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏±‡∏Å‡πÑ‡∏•‡∏ô‡πå‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
        </p>
        <p class="foot" style="color: white;">
          ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÄ‡∏•‡πá‡∏ö PVC ‡πÄ‡∏û‡πâ‡∏ô‡∏ó‡πå‡∏•‡∏≤‡∏¢‡πÄ‡∏¢‡∏≠‡∏∞‡πÜ ‡∏à‡∏∂‡πâ‡∏á‡πÜ
          ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ï‡∏¥‡∏î‡∏Å‡∏±‡∏ô 2 ‡∏Ñ‡∏¥‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞
          ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏≤‡∏á‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏∞‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏Å‡πá‡∏ö‡∏°‡∏±‡∏î‡∏à‡∏≥‡∏•‡πá‡∏≠‡∏Ñ‡∏Ñ‡∏¥‡∏ß ‡∏Ñ‡∏¥‡∏ß‡∏•‡∏∞ 100.-
          (‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πà‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏Ñ‡πà‡∏∞)
        </p>

        <p class="foot" style="color: white;">
          **** ‡∏°‡∏±‡∏î‡∏à‡∏≥ = ‡πÑ‡∏î‡πâ‡∏Ñ‡∏¥‡∏ß **** ‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏î‡∏ô‡∏∞‡∏Ñ‡∏∞
          ‡πÄ‡∏•‡∏ó‡πÑ‡∏î‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 15 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á / ‡∏Å‡∏£‡∏ì‡∏µ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
          = ‡∏¢‡∏∂‡∏î‡∏°‡∏±‡∏î‡∏à‡∏≥
        </p>
      </div>
    </div>

    <!-- CTA ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß (‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡πÄ‡∏ï‡πá‡∏°‡∏•‡πà‡∏≤‡∏á / ‡πÄ‡∏î‡∏™‡∏Å‡πå‡∏ó‡πá‡∏≠‡∏õ: ‡∏°‡∏∏‡∏°‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á) -->
    <a
      id="ctaBook"
      href="https://line.me/R/ti/p/@153nuymp"
      target="_blank"
      class="cta-book"
      aria-label="‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏•‡∏ô‡πå">‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏•‡∏ô‡πå</a
    >

    <!-- Lofi mini player -->
    <div class="lofi-control" role="group" aria-label="‡∏ï‡∏±‡∏ß‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏û‡∏•‡∏á lofi">
      <button id="lofiToggle" class="lofi-btn" aria-pressed="false"
        >‚ñ∂Ô∏é ‡πÄ‡∏•‡πà‡∏ô</button
      >
      <button id="lofiMute" class="lofi-btn secondary" aria-pressed="false"
        >üîá</button
      >
      <input
        id="lofiVol"
        class="lofi-slider"
        type="range"
        min="0"
        max="1"
        step="0.01"
        value="0.5"
        aria-label="‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á"
      />
      <audio id="lofiAudio" preload="auto" loop autoplay playsinline>
        <source src="/audio/lofi.mp3" type="audio/mpeg" />
      </audio>
    </div>

    <!-- Event Detail Modal -->
    <div id="eventModal" class="modal-backdrop" hidden>
      <div
        class="modal"
        role="dialog"
        aria-modal="true"
        aria-labelledby="evTitle"
      >
        <button class="modal-close" type="button" aria-label="‡∏õ‡∏¥‡∏î" data-close
          >‚úï</button
        >
        <h3 id="evTitle" class="modal-title">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏¥‡∏ß</h3>
        <div class="modal-content">
          <div class="modal-row">
            <span class="label">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</span><span
              id="evStatus"
              class="value badge"></span>
          </div>
          <div class="modal-row">
            <span class="label">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£</span><span id="evService" class="value"
              >-</span
            >
          </div>
          <div class="modal-row">
            <span class="label">‡∏ä‡πà‡∏≤‡∏á</span><span id="evStaff" class="value"
              >-</span
            >
          </div>
          <div class="modal-row">
            <span class="label">‡πÄ‡∏ß‡∏•‡∏≤</span><span id="evTime" class="value"
              >-</span
            >
          </div>
          <div class="modal-row">
            <span class="label">‡πÇ‡∏ô‡πâ‡∏ï</span><span id="evNote" class="value"
              >-</span
            >
          </div>
          <div class="modal-actions">
            <a
              id="evBookLine"
              class="btn-line"
              href="https://line.me/R/ti/p/@153nuymp"
              target="_blank"
              rel="noopener">‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏•‡∏ô‡πå</a
            >
          </div>
        </div>
      </div>
    </div>

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.css"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js"
      is:raw></script>
    <script
      src="https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.15/locales-all.global.min.js"
      is:raw></script>
    <script
      src="https://cdn.jsdelivr.net/npm/papaparse@5.4.1/papaparse.min.js"
      is:raw></script>

    <script is:inline>
      window.addEventListener("DOMContentLoaded", () => {
        const FC = window.FullCalendar;
        const Papa = window.Papa;
        if (!FC || !Papa) {
          console.error("FullCalendar ‡∏´‡∏£‡∏∑‡∏≠ Papa ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°");
          return;
        }

        const calendarEl = document.getElementById("calendar");
        if (!calendarEl) return;

        /* ---------- helpers: LINE booking ---------- */
        const LINE_OA =
          typeof LINE_OA_ID === "string" ? LINE_OA_ID : "@your-line-id";
        const ctaBook = document.getElementById("ctaBook");
        const evBookLine = document.getElementById("evBookLine");

        function buildLineLink(text = "") {
          // ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏≤ OA ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
          // ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£: https://line.me/R/oaMessage/<OA_ID>/?<encoded_text>
          const base =
            "https://line.me/R/oaMessage/" + encodeURIComponent(LINE_OA) + "/?";
          return base + encodeURIComponent(text);
        }

        function defaultLineMessage() {
          // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≠‡∏á‡∏•‡∏≠‡∏¢
          const today = new Date();
          const pad = (n) => String(n).padStart(2, "0");
          const msg = `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏™‡∏ô‡πÉ‡∏à‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${pad(today.getDate())}/${pad(today.getMonth() + 1)}/${today.getFullYear()} ‡∏Ñ‡πà‡∏∞`;
          return msg;
        }

        // ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≠‡∏á‡∏•‡∏≠‡∏¢ (‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠/‡πÄ‡∏î‡∏™‡∏Å‡πå‡∏ó‡πá‡∏≠‡∏õ)
        if (ctaBook) {
          ctaBook.href = buildLineLink(defaultLineMessage());
          ctaBook.target = "_blank";
          ctaBook.rel = "noopener";
        }

        /* ---------- helpers: modal + format ---------- */
        const modalEl = document.getElementById("eventModal");
        const closeBtn = modalEl?.querySelector("[data-close]");
        const fTitle = document.getElementById("evTitle");
        const fStatus = document.getElementById("evStatus");
        const fService = document.getElementById("evService");
        const fStaff = document.getElementById("evStaff");
        const fTime = document.getElementById("evTime");
        const fNote = document.getElementById("evNote");

        const CAL_TZ = "Asia/Bangkok";

        function fmtDate(dt) {
          return FC.formatDate(dt, {
            locale: "th",
            timeZone: CAL_TZ,
            weekday: "short",
            day: "2-digit",
            month: "short",
            year: "numeric",
          });
        }
        function fmtTime(dt) {
          return FC.formatDate(dt, {
            locale: "th",
            timeZone: CAL_TZ,
            hour: "2-digit",
            minute: "2-digit",
            hour12: false,
          });
        }
        function fmtRange(start, end) {
          if (!start) return "-";
          if (!end) return `${fmtDate(start)} ‡πÄ‡∏ß‡∏•‡∏≤ ${fmtTime(start)}`;
          const sameDay =
            FC.formatDate(start, {
              timeZone: CAL_TZ,
              year: "numeric",
              month: "2-digit",
              day: "2-digit",
            }) ===
            FC.formatDate(end, {
              timeZone: CAL_TZ,
              year: "numeric",
              month: "2-digit",
              day: "2-digit",
            });
          return sameDay
            ? `${fmtDate(start)} ‡πÄ‡∏ß‡∏•‡∏≤ ${fmtTime(start)}‚Äì${fmtTime(end)}`
            : `‡∏à‡∏≤‡∏Å ${fmtDate(start)} ${fmtTime(start)} ‡∏ñ‡∏∂‡∏á ${fmtDate(end)} ${fmtTime(end)}`;
        }

        function openEventModal(data) {
          if (!modalEl) return;
          const { status, service, staff, note, start, end } = data || {};
          fTitle &&
            (fTitle.textContent = service
              ? `‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏¥‡∏ß: ${service}`
              : "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏¥‡∏ß");
          if (fStatus) {
            const isAvail = status === "available";
            fStatus.textContent = isAvail ? "‡∏ß‡πà‡∏≤‡∏á" : "‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß";
            fStatus.className =
              "value badge " + (isAvail ? "badge-available" : "badge-booked");
          }
          fService && (fService.textContent = service || "-");
          fStaff && (fStaff.textContent = staff || "-");
          fTime && (fTime.textContent = fmtRange(start, end));
          fNote && (fNote.textContent = note || "-");

          // ‡∏õ‡∏∏‡πà‡∏°‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡πÇ‡∏°‡∏î‡∏±‡∏• ‚Äî ‡∏û‡∏£‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
          if (evBookLine) {
            const when = fmtRange(start, end);
            const msg =
              `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡∏à‡∏≠‡∏á‡∏Ñ‡∏¥‡∏ß‡∏ó‡∏≥‡πÄ‡∏•‡πá‡∏ö\n` +
              `‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£: ${service || "-"}\n` +
              (staff ? `‡∏ä‡πà‡∏≤‡∏á: ${staff}\n` : "") +
              `‡πÄ‡∏ß‡∏•‡∏≤: ${when}\n` +
              `‡∏Ç‡∏≠‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞`;
            evBookLine.href = buildLineLink(msg);
          }

          modalEl.hidden = false;
          const prevOverflow = document.documentElement.style.overflow;
          document.documentElement.dataset._prevOverflow = prevOverflow;
          document.documentElement.style.overflow = "hidden";
          closeBtn?.focus();
        }
        function closeEventModal() {
          if (!modalEl) return;
          modalEl.hidden = true;
          const prev = document.documentElement.dataset._prevOverflow || "";
          document.documentElement.style.overflow = prev;
        }
        closeBtn?.addEventListener("click", closeEventModal);
        modalEl?.addEventListener("click", (e) => {
          if (e.target === modalEl) closeEventModal();
        });
        window.addEventListener("keydown", (e) => {
          if (!modalEl?.hidden && e.key === "Escape") closeEventModal();
        });

        /* ---------- ‡πÇ‡∏´‡∏•‡∏î‡∏ä‡∏µ‡∏ï + events ---------- */
        async function loadEventsFromSheet() {
          const url = calendarEl.getAttribute("data-sheet-url") || "";
          try {
            const res = await fetch(url, { cache: "no-store" });
            if (!res.ok) throw new Error("‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏µ‡∏ï‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            const text = await res.text();
            const parsed = Papa.parse(text, {
              header: true,
              skipEmptyLines: true,
            });
            const rows = parsed.data || [];

            // ‚ú® ‡∏ä‡πà‡∏ß‡∏¢ normalize ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô HH:mm:ss ‡πÄ‡∏™‡∏°‡∏≠ (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á HH:mm ‡πÅ‡∏•‡∏∞ HH:mm:ss)
            const toHMS = (t) => {
              if (!t) return "";
              const s = String(t).trim();
              const m = s.match(/^(\d{1,2}):(\d{2})(?::(\d{2}))?$/);
              if (!m) return ""; // ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á
              const hh = String(m[1]).padStart(2, "0");
              const mm = String(m[2]).padStart(2, "0");
              const ss = m[3] ? String(m[3]).padStart(2, "0") : "00";
              return `${hh}:${mm}:${ss}`;
            };

            return rows.flatMap((r) => {
              const date = (r.date || r.DATE || "").toString().trim();
              const start = toHMS(r.start_time || r.start);
              const end = toHMS(r.end_time || r.end);
              const service = (r.service || "").toString().trim();
              const staff = (r.staff || "").toString().trim();
              const status = (r.status || "available")
                .toString()
                .toLowerCase()
                .trim();
              const note = (r.note || "").toString().trim();

              // ‡∏ñ‡πâ‡∏≤‡∏ß‡∏±‡∏ô/‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ
              if (!date || !start || !end) return [];

              const isAvail = status === "available";
              const tz = "+07:00"; // Asia/Bangkok

              return [
                {
                  title: isAvail ? `‡∏ß‡πà‡∏≤‡∏á: ${service}` : "‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß",
                  start: `${date}T${start}${tz}`, // ‚úÖ ‡πÑ‡∏°‡πà‡πÄ‡∏ï‡∏¥‡∏° :00 ‡∏≠‡∏µ‡∏Å‡πÅ‡∏•‡πâ‡∏ß
                  end: `${date}T${end}${tz}`, // ‚úÖ
                  extendedProps: { service, staff, status, note, date },
                  display: "block",
                  classNames: [isAvail ? "evt-available" : "evt-booked"],
                  backgroundColor: getComputedStyle(document.documentElement)
                    .getPropertyValue(isAvail ? "--avail-bg" : "--booked-bg")
                    .trim(),
                  borderColor: getComputedStyle(document.documentElement)
                    .getPropertyValue(
                      isAvail ? "--avail-border" : "--booked-border"
                    )
                    .trim(),
                },
              ];
            });
          } catch (err) {
            console.error(err);
            return [];
          }
        }

        const isSmall = window.matchMedia("(max-width: 640px)").matches;

        const calendar = new FC.Calendar(calendarEl, {
          initialView: isSmall ? "listDay" : "dayGridMonth",
          timeZone: "Asia/Bangkok",
          locale: "th",
          firstDay: 1,
          height: "auto",
          nowIndicator: true,
          headerToolbar: {
            left: "prev,next",
            center: "title",
            right: isSmall ? "" : "today,dayGridMonth,timeGridWeek,timeGridDay",
          },
          dayMaxEvents: 4,
          displayEventEnd: true,
          eventTimeFormat: {
            hour: "2-digit",
            minute: "2-digit",
            hour12: false,
          },
          views: { dayGridMonth: { fixedWeekCount: false } },

          moreLinkClick: (arg) => {
            const small = window.matchMedia("(max-width: 640px)").matches;
            calendar.changeView(small ? "listDay" : "timeGridDay", arg.date);
            // return 'day' // (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏¥‡∏ß‡πÄ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß)
          },

          events: async (_info, success, failure) => {
            const events = await loadEventsFromSheet();
            if (events.length) success(events);
            else failure(new Error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ï"));
          },

          eventDidMount(info) {
            const p = info.event.extendedProps || {};
            const isAvail = p.status === "available";
            const main = info.el.querySelector(".fc-event-main");
            info.el.style.borderLeft = `4px solid ${isAvail ? "var(--avail-border)" : "var(--booked-border)"}`;
            if (main)
              main.style.background = isAvail
                ? "var(--avail-bg)"
                : "var(--booked-bg)";

            info.el.style.cursor = "pointer";
          },

          eventClick(info) {
            info.jsEvent?.preventDefault?.();
            const p = info.event.extendedProps || {};
            openEventModal({
              status: p.status,
              service: p.service,
              staff: p.staff,
              note: p.note,
              start: info.event.start,
              end: info.event.end,
            });
          },

          eventContent(info) {
            const p = info.event.extendedProps || {};
            const isAvail = p.status === "available";
            const timeStart = FC.formatDate(info.event.start, {
              timeZone: "Asia/Bangkok",
              hour: "2-digit",
              minute: "2-digit",
              hour12: false,
            });
            const timeEnd = info.event.end
              ? FC.formatDate(info.event.end, {
                  timeZone: "Asia/Bangkok",
                  hour: "2-digit",
                  minute: "2-digit",
                  hour12: false,
                })
              : null;
            const timeText = timeEnd ? `${timeStart}‚Äì${timeEnd}` : timeStart;

            if (
              calendar.view.type.startsWith("list") ||
              calendar.view.type.startsWith("timeGrid")
            ) {
              const root = document.createElement("div");
              root.style.display = "flex";
              root.style.alignItems = "center";
              root.style.gap = "8px";
              const dot = document.createElement("span");
              dot.style.width = "8px";
              dot.style.height = "8px";
              dot.style.borderRadius = "999px";
              dot.style.background = isAvail
                ? "var(--avail-border)"
                : "#9ca3af";
              const time = document.createElement("span");
              time.textContent = timeText;
              time.style.fontWeight = "700";
              const badge = document.createElement("span");
              badge.textContent = isAvail ? "‡∏ß‡πà‡∏≤‡∏á" : "‡∏à‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß";
              badge.className = isAvail
                ? "badge badge-available"
                : "badge badge-booked";
              root.append(dot, time, badge);
              return { domNodes: [root] };
            }
            return true;
          },

          windowResize: () => applyResponsive(),
        });

        function applyResponsive() {
          const small = window.matchMedia("(max-width: 640px)").matches;
          const targetView = small ? "listDay" : "dayGridMonth";
          if (calendar.view.type !== targetView)
            calendar.changeView(targetView);

          calendar.setOption(
            "headerToolbar",
            small
              ? { left: "prev", center: "title", right: "next" }
              : {
                  left: "prev,next today",
                  center: "title",
                  right: "dayGridMonth,timeGridWeek,timeGridDay",
                }
          );
          calendar.setOption("dayMaxEvents", small ? 1 : 4);
          calendar.setOption("aspectRatio", small ? 0.95 : 1.35);
          calendar.setOption("slotMinTime", "09:00:00");
          calendar.setOption("slotMaxTime", "22:00:00");
          calendar.setOption("eventMinHeight", small ? 22 : 0);
        }

        applyResponsive();
        calendar.render();

        // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏∏‡∏Å ~7 ‡∏ô‡∏≤‡∏ó‡∏µ (‡∏Å‡∏±‡∏ô‡∏ä‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢)
        setInterval(
          () => calendar.refetchEvents(),
          7 * 60 * 1000 + Math.random() * 30000
        );

        /* ---------- Lofi autoplay ‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£‡∏Ç‡∏∂‡πâ‡∏ô ---------- */
        const audio = document.getElementById("lofiAudio");
        const btn = document.getElementById("lofiToggle");
        const mute = document.getElementById("lofiMute");
        const vol = document.getElementById("lofiVol");
        if (!(audio && btn && mute && vol)) return;

        const DEFAULT_VOL = Number(vol.value || 0.5);
        audio.volume = DEFAULT_VOL;

        let isPlaying = false;
        let isMuted = audio.muted || false;

        function syncUI() {
          btn.textContent = isPlaying ? "‚è∏Ô∏é ‡∏û‡∏±‡∏Å" : "‚ñ∂Ô∏é ‡πÄ‡∏•‡πà‡∏ô";
          btn.setAttribute("aria-pressed", String(isPlaying));
          mute.textContent = isMuted ? "üîà" : "üîá";
          mute.setAttribute("aria-pressed", String(isMuted));
        }

        function onFirstUserGestureOnce(handler) {
          const events = [
            "pointerdown",
            "touchstart",
            "keydown",
            "wheel",
            "scroll",
          ];
          const wrap = async (e) => {
            events.forEach((ev) => window.removeEventListener(ev, wrap, true));
            await handler(e);
          };
          events.forEach((ev) =>
            window.addEventListener(ev, wrap, { once: true, capture: true })
          );
        }

        async function tryPlay(unmute = true) {
          try {
            if (unmute) audio.muted = false;
            await audio.play();
            isPlaying = true;
            isMuted = audio.muted;
            syncUI();
            return true;
          } catch {
            return false;
          }
        }

        async function startAutoplay() {
          // ‡∏Ç‡∏±‡πâ‡∏ô 1: ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏ö‡∏ö muted ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ú‡πà‡∏≤‡∏ô‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢
          try {
            audio.muted = true;
            await audio.play();
            isPlaying = true;
            isMuted = true;
          } catch {
            /* ignore */
          }
          // ‡∏Ç‡∏±‡πâ‡∏ô 2: ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏≠‡∏¢ unmute
          if (isPlaying) {
            setTimeout(async () => {
              const ok = await tryPlay(true);
              if (!ok) {
                /* ‡∏¢‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏ö‡∏ö mute ‡∏ï‡πà‡∏≠‡πÑ‡∏õ */
              }
            }, 200);
          } else {
            // ‡∏Ç‡∏±‡πâ‡∏ô 3: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ ‡∏£‡∏≠ gesture ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
            onFirstUserGestureOnce(async () => {
              (await tryPlay(true)) || (await tryPlay(false)) || (() => {})();
            });
          }
          syncUI();
        }

        btn.addEventListener("click", async () => {
          try {
            if (!isPlaying) {
              await tryPlay(true);
            } else {
              audio.pause();
              isPlaying = false;
            }
            syncUI();
          } catch {
            alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡πà‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÑ‡∏ü‡∏•‡πå /audio/lofi.mp3");
          }
        });

        mute.addEventListener("click", () => {
          isMuted = !isMuted;
          audio.muted = isMuted;
          if (!isMuted && !isPlaying) tryPlay(true);
          syncUI();
        });

        vol.addEventListener("input", () => {
          audio.volume = Number(vol.value);
          if (audio.volume === 0 && !isMuted) {
            isMuted = true;
            audio.muted = true;
          } else if (audio.volume > 0 && isMuted) {
            isMuted = false;
            audio.muted = false;
            if (!isPlaying) tryPlay(true);
          }
          syncUI();
        });

        // re-try ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏ó‡πá‡∏ö
        const retry = () => {
          if (!document.hidden && !audio.paused) return;
          tryPlay(false);
        };
        document.addEventListener("visibilitychange", () => {
          if (!document.hidden) retry();
        });
        window.addEventListener("pageshow", retry);
        startAutoplay();
      });
    </script>
  </body>
</html>
